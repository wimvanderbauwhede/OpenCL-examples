# I used https://github.com/SCons/scons/wiki/CudaTool
# cloned https://github.com/SCons/scons-contrib
# pip install did not work, neither this python setyp.py install.
# In the end I just copied the directory cuda from inside sconscontrib/SCons/Tool into the folder
# .scons/site_scons/site_tools 
# and this works. 

import os
import commands

help = """
Options:
kernel=[1]   
w=number [1024]   matrix width
ref=0|1|2 [1]     reference 2=ref only
v=0|1 [1]         verbose
nruns=[1]
"""

kernel=ARGUMENTS.get('kernel','1')
width=ARGUMENTS.get('w','1024')
ref=ARGUMENTS.get('ref','1')
refflag='-DREF'
verbose=ARGUMENTS.get('v','1')
vflag='-DVERBOSE'
if verbose=='0':
    vflag=''
nruns=ARGUMENTS.get('nruns','1')
nrunsflag='-DNRUNS='+nruns

DEVFLAGS=['-DKERNEL='+kernel,'-DWIDTH='+width,'-DREF='+ref,vflag, nrunsflag]
#if commands.getoutput("uname") == "Darwin":
#    DEVFLAGS+=['-DOSX']
    
#Â Can't be .cc because the Tool is too stupid. I should hack it really
sources=Split("""
matacc_cuda_driver.cu
matacc_cuda_kernel.cu
""");

Help(help)

env = Environment()
env['CUDA_SDK_PATH']='/Developer/NVIDIA/CUDA-8.0/'

env.Tool('cuda')
#env.Append(LIBS=['cutil', 'glut', 'GLEW'])
env['CC'] ='g++' # EVIL trick because the Tool wants to use clang gcc for linking. Has to be clang though. 
env['NVCCFLAGS'] = [  '-std','c++11', '-arch','compute_30', '-code','sm_30'] + DEVFLAGS
#env['STATICNVCCFLAGS'] = flags for static objects
#env['SHAREDNVCCFLAGS'] = flags for shared objects

prog=env.Program('matacc_cuda_'+kernel,sources)

